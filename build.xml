<project name="TwitUp" default="dist" basedir="." xmlns:sonar="antlib:org.sonar.ant">
    <description>
        TwitUp is the new Twitter
    </description>

    <!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) -->
    <property name="sonar.host.url" value="http://localhost:9000" />

    <!-- set global properties for this build -->
    <property name="src" location="src"/>
    <property name="build" location="bin"/>
    <property name="dist" location="out"/>

    <!-- Define the SonarQube project properties -->
    <property name="sonar.projectKey" value="twitup" />
    <property name="sonar.projectName" value="Sonar TwitUp" />
    <property name="sonar.projectVersion" value="1.0" />
    <property name="sonar.sources" value="src" />
    <property name="sonar.java.binaries" value="bin" />
    <property name="sonar.login" value="admin" />
    <property name="sonar.password" value="admin" />

    <!-- Define SonarScanner for Ant Target -->
    <target name="sonar">
        <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
            <!-- Update the following line, or put the "sonarqube-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
            <classpath path="./sonarqube-ant-task-2.7.1.1951.jar" />
        </taskdef>

        <!-- Execute SonarScanner for Ant Analysis -->
        <sonar:sonar />
    </target>

    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init"
            description="compile the source">
        <!-- Compile the Java code from ${src} into ${build} -->
        <javac srcdir="${src}" destdir="${build}"/>
    </target>

    <target name="dist" depends="compile"
            description="generate the distribution">
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}/lib"/>

        <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
        <jar jarfile="${dist}/lib/TwitUp-${DSTAMP}.jar" basedir="${build}"/>
    </target>

    <target name="clean"
            description="clean up">
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
</project>